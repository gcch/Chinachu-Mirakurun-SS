#!/bin/bash

# ------------------------------------------------------- #
#
# chkstatus
# (Component of Chinachu with Mirakurun Sleep Script)
#
# Copyright (c) 2015-2016 tag
#
# ------------------------------------------------------- #

# ======================================================= #

# Include Chinachu Sleep Script configuration file
source /usr/local/etc/chinachu-mirakurun-ss/components
source ${ConfigFile}

# ======================================================= #

# ------------------------------------------------------- #

# Chinachu with Mirakurun Sleep Script: is enable
function IsEnableSleep() {
	if (( EnableSleep != 0 ))
	then
		exit 1
	fi
}

# ------------------------------------------------------- #

# Chinachu: is Chinachu WUI used
function IsChinachuWuiUsed() {
	${ChinachuApiCountConnection} -h ${ChinachuHost} -p ${ChinachuPort} >/dev/null 2>&1
	if (( $? != 0 ))
	then
		echo "[`date`] ${0}: Someone is connecting to Chinachu WUI." 1>&2
		exit 1
	fi
}

# ------------------------------------------------------- #

# Chinachu: is Chinachu recording
function IsChinachuRecording() {
	${ChinachuApiIsRecording} -h ${ChinachuHost} -p ${ChinachuPort} >/dev/null 2>&1
	if (( $? != 0 ))
	then
		echo "[`date`] ${0}: Chinachu is recording now." 1>&2
		exit 1
	fi
}

# ------------------------------------------------------- #

# Chinachu: is Chinachu waiting for the next recording
function IsChinachuWaitingForNextRec() {
	declare Now=`date +%s`
	declare Next=`${ChinachuApiGetTopReserveTime} -h ${ChinachuHost} -p ${ChinachuPort}`
	if [[ "${Next}" != "" ]]
	then
		declare Border=$((${Next} - ${SleepThresholdBeforeNextRecord}))
		if (( Now >= Border ))
		then
			echo "[`date`] ${0}: Chinachu is waiting for the next recording. (next: `date -d @${Next}`)" 1>&2
			exit 1
		fi
	fi
}

# ------------------------------------------------------- #

# Mirakurun: stream count
function IsMirakurunUsed() {
	${MirakurunApiSumStreamCount} -h ${MirakurunHost} -p ${MirakurunPort} >/dev/null 2>&1
	if (( $? != 0 ))
	then
	        echo "[`date`] ${0}: Someone is using Mirakurun." 1>&2
	        exit 1
	fi
}

# ------------------------------------------------------- #

# check the uptime
function DoJustBoot() {
	declare Now=`date +%s`
	declare Uptime=`uptime -s | date -f - +%s`
	declare Border
	(( Border = Uptime + CheckMarginAfterWakeup ))
	if (( Now < Border ))
	then
		echo "[`date`] ${0}: It has not elapsed only a few minutes from a boot. (uptime: `date -d @${Uptime}`)" 1>&2
		exit 1
	fi
}

# ------------------------------------------------------- #

# check the time from waking up from sleep
function DoJustWakeup() {
	if [ -f ${TmpFile} ]
	then
		declare Now=`date +%s`
		declare WakeupTime=`stat -c %y ${TmpFile} | date -f - +%s`
		declare Border
		(( Border = WakeupTime + CheckMarginAfterWakeup ))
		if (( Now < Border ))
		then
			echo "[`date`] ${0}: It has not elapsed only a few minutes from waking up from sleep. (wakeuptime: `date -d @${WakeupTime}`)" 1>&2
			exit 1
		fi
	fi
}

# ------------------------------------------------------- #

# check whether someone is accessing this server via Samba (root only can execute normally)
function IsSambaUsed() {
	if type smbstatus >/dev/null 2>&1
	then
		declare SmbUsers=`smbstatus -p | grep "^[0-9]" | wc -l`
		if (( SmbUsers > 0 ))
		then
			echo "[`date`] ${0}: Someone is accessing this server via Samba." 1>&2
			exit 1
		fi
	fi
}

# ------------------------------------------------------- #

# check whether someone is logging in to this server
function IsServerLoggedIn() {
	declare Users=`who -u | wc -l`
	if (( ${Users} > 0 ))
	then
		echo "[`date`] ${0}: Someone is logging in to this server." 1>&2
		exit 1
	fi
}

# ======================================================= #

# Test

if (( $# > 0 ))
then
	case $1 in
		IsEnableSleep)			IsEnableSleep ;;
		IsChinachuWuiUsed)		IsChinachuWuiUsed ;;
		IsChinachuRecording)		IsChinachuRecording ;;
		IsChinachuWaitingForNextRec)	IsChinachuWaitingForNextRec ;;
		IsMirakurunUsed)		IsMirakurunUsed ;;
		DoJustBoot)			DoJustBoot ;;
		DoJustWakeup)			DoJustWakeup ;;
		IsSambaUsed)			IsSambaUsed ;;
		IsServerLoggedIn)		IsServerLoggedIn ;;
	esac

	# normal end
	exit
fi

# ======================================================= #

# Main

IsEnableSleep

IsChinachuWuiUsed
IsChinachuRecording
IsChinachuWaitingForNextRec

#IsMirakurunUsed

DoJustBoot
DoJustWakeup

IsSambaUsed
IsServerLoggedIn

# normal end
echo "[`date`] ${0}: It is in a state that can be shutdown/hibernate/sleep this system." 1>&2
exit 0
